version: "2.1"

services:
  lehava-api-mock:
    image: lehava-api-mock
    container_name: lehava-api-mock
    build:
      context: ../../lehava-api-mock
      dockerfile: Dockerfile
    ports:
      - 8050:8050

  tommy-server:
    image: tommy-server:deep-search
    container_name: tommy-server
    build:
      context: ../../tommy-server
      dockerfile: Dockerfile
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      NODE_ENV: development
      AUTH_CALLBACK_URL: /auth/callback
      PORT: 80
      SHRAGA_URL: http://13.79.7.3
      CLIENT_URL: http://client-nginx:3000
      REDIS_URL: "redis://redis:6379"
      RABBITMQ_URL: "amqp://rabbitmq:5672"
      LEHAVA_API_SERVER_NAME: "lehava-api-mock"
      LEHAVA_API_HOST: "lehava-api-mock"
      LEHAVA_API_PORT: "8050"
      REQ_TYPES_TO_CACHE: "nr,z_networks_to_service,pcat,chgcat,z_pcat_to_network,z_chgcat_to_network"
      CHAT_URL: "http://lehava-api-mock:8050/api/v1"
      HI_CHAT_URL: "http://lehava-api-mock:8050/group"
      CHAT_GROUP_URL: groups
      CHAT_LOGIN_URL: login
      CHAT_MESSAGE_URL: chat
      LOGIN_USER: tommy
      LOGIN_PASS: Aa123456
      SUPPORT_USERS: "t1010101@aman,t11223344@aman,t12312300@aman"
      HOMEPAGE_TUTORIAL_VIDEO_URL: "https://youtube.com"
    ports:
      - 80:80
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    container_name: "redis"
    image: "redis:alpine"
    ports:
      - "6379:6379"

  rabbitmq:
    container_name: "rabbitmq"
    build:
      context: ../
      dockerfile: rabbitmq.Dockerfile
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 10s
      timeout: 10s
      retries: 15

  access-token-service:
    image: "access-token-service"
    container_name: "access-token-service"
    build:
      context: ../../access-token-service
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      RABBITMQ_URL: "amqp://rabbitmq:5672"
      REDIS_URL: "redis://redis:6379"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

  logger:
    image: logger
    container_name: logger
    build:
      context: ../../logger
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      RABBITMQ_URL: "amqp://rabbitmq:5672"
    depends_on:
      rabbitmq:
        condition: service_healthy

  # client-builder:
  #   container_name: client-builder
  #   image: trion/ng-cli:10.0.5
  #   working_dir: /usr/tommy-client/
  #   volumes:
  #     - ../../tommy-client/:/usr/tommy-client/
  #   command: bash -c "npm i && ng build --watch"

  client-nginx:
    container_name: client-nginx
    image: nginx
    volumes:
      - ../../tommy-client/nginx.dev.conf:/etc/nginx/nginx.conf
      - ../../tommy-client/dist/tommy/:/usr/share/nginx/html/
    ports:
      - "3000:3000"
    depends_on:
      - tommy-server
